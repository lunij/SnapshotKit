name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        xcode:
          - "12.5.1" # Swift 5.4
          - "13.2.1" # Swift 5.5

    name: macOS 11, Xcode ${{ matrix.xcode }}
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v1
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Set DerivedData path
        run: defaults write com.apple.dt.Xcode IDECustomDerivedDataLocation .derivedData
      - name: Homebrew installations
        run: brew install swiftformat xcbeautify
      - name: Lint
        run: make lint
      - name: Generate Xcode project
        run: make xcodeproj
      - name: Run tests on iOS
        run: make test-ios
      - name: Run tests on macOS
        run: make test-macos
      - name: Run tests on tvOS
        run: make test-tvos
      - name: Zip XCResults
        if: ${{ failure() }}
        run: make xcresults_zip
      - name: Upload XCResults
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: xcresults.zip
          path: ./xcresults.zip
          if-no-files-found: ignore
      - name: Zip snapshots
        if: ${{ failure() }}
        run: make snapshots_zip
      - name: Upload snapshots.zip
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots-xcode-${{ matrix.xcode }}.zip
          path: ./snapshots.zip
          if-no-files-found: ignore

  ubuntu:
    strategy:
      matrix:
        os: ["18.04", "20.04"]

    name: Ubuntu ${{ matrix.os }}
    runs-on: ubuntu-${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - name: Run tests
        run: make test-linux

  windows:
    strategy:
      matrix:
        swift:
          - "5.4"
          - "5.5"

    name: Windows 2019, Swift ${{ matrix.swift }}
    runs-on: windows-2019

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v2
      - uses: MaxDesiatov/swift-windows-action@v1
        with:
          shell-action: swift test
          swift-version: ${{ matrix.swift }}
